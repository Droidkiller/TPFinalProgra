#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaDatos
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TPFinalProgra")]
	public partial class DSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserteAlmacenamiento(eAlmacenamiento instance);
    partial void UpdateeAlmacenamiento(eAlmacenamiento instance);
    partial void DeleteeAlmacenamiento(eAlmacenamiento instance);
    partial void InserteGraficos(eGraficos instance);
    partial void UpdateeGraficos(eGraficos instance);
    partial void DeleteeGraficos(eGraficos instance);
    partial void InserteMarca(eMarca instance);
    partial void UpdateeMarca(eMarca instance);
    partial void DeleteeMarca(eMarca instance);
    partial void InserteProcesador(eProcesador instance);
    partial void UpdateeProcesador(eProcesador instance);
    partial void DeleteeProcesador(eProcesador instance);
    partial void InserteNotebook(eNotebook instance);
    partial void UpdateeNotebook(eNotebook instance);
    partial void DeleteeNotebook(eNotebook instance);
    #endregion
		
		public DSDataContext() : 
				base(global::CapaDatos.Properties.Settings.Default.TPFinalPrograConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<eAlmacenamiento> eAlmacenamientos
		{
			get
			{
				return this.GetTable<eAlmacenamiento>();
			}
		}
		
		public System.Data.Linq.Table<eGraficos> eGraficos
		{
			get
			{
				return this.GetTable<eGraficos>();
			}
		}
		
		public System.Data.Linq.Table<eMarca> eMarcas
		{
			get
			{
				return this.GetTable<eMarca>();
			}
		}
		
		public System.Data.Linq.Table<eProcesador> eProcesadors
		{
			get
			{
				return this.GetTable<eProcesador>();
			}
		}
		
		public System.Data.Linq.Table<eNotebook> eNotebooks
		{
			get
			{
				return this.GetTable<eNotebook>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Almacenamiento")]
	public partial class eAlmacenamiento : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _modelo;
		
		private System.Nullable<int> _capacidad;
		
		private System.Nullable<double> _velocidad;
		
		private string _tipo;
		
		private System.Nullable<int> _idMarca;
		
		private EntitySet<eNotebook> _eNotebooks;
		
		private EntityRef<eMarca> _eMarca;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmodeloChanging(string value);
    partial void OnmodeloChanged();
    partial void OncapacidadChanging(System.Nullable<int> value);
    partial void OncapacidadChanged();
    partial void OnvelocidadChanging(System.Nullable<double> value);
    partial void OnvelocidadChanged();
    partial void OntipoChanging(string value);
    partial void OntipoChanged();
    partial void OnidMarcaChanging(System.Nullable<int> value);
    partial void OnidMarcaChanged();
    #endregion
		
		public eAlmacenamiento()
		{
			this._eNotebooks = new EntitySet<eNotebook>(new Action<eNotebook>(this.attach_eNotebooks), new Action<eNotebook>(this.detach_eNotebooks));
			this._eMarca = default(EntityRef<eMarca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelo", DbType="VarChar(20)")]
		public string modelo
		{
			get
			{
				return this._modelo;
			}
			set
			{
				if ((this._modelo != value))
				{
					this.OnmodeloChanging(value);
					this.SendPropertyChanging();
					this._modelo = value;
					this.SendPropertyChanged("modelo");
					this.OnmodeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_capacidad", DbType="Int")]
		public System.Nullable<int> capacidad
		{
			get
			{
				return this._capacidad;
			}
			set
			{
				if ((this._capacidad != value))
				{
					this.OncapacidadChanging(value);
					this.SendPropertyChanging();
					this._capacidad = value;
					this.SendPropertyChanged("capacidad");
					this.OncapacidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_velocidad", DbType="Float")]
		public System.Nullable<double> velocidad
		{
			get
			{
				return this._velocidad;
			}
			set
			{
				if ((this._velocidad != value))
				{
					this.OnvelocidadChanging(value);
					this.SendPropertyChanging();
					this._velocidad = value;
					this.SendPropertyChanged("velocidad");
					this.OnvelocidadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tipo", DbType="VarChar(10)")]
		public string tipo
		{
			get
			{
				return this._tipo;
			}
			set
			{
				if ((this._tipo != value))
				{
					this.OntipoChanging(value);
					this.SendPropertyChanging();
					this._tipo = value;
					this.SendPropertyChanged("tipo");
					this.OntipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", DbType="Int")]
		public System.Nullable<int> idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					if (this._eMarca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eAlmacenamiento_Notebook", Storage="_eNotebooks", ThisKey="id", OtherKey="idAlmacenamiento")]
		public EntitySet<eNotebook> eNotebooks
		{
			get
			{
				return this._eNotebooks;
			}
			set
			{
				this._eNotebooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_eAlmacenamiento", Storage="_eMarca", ThisKey="idMarca", OtherKey="id", IsForeignKey=true)]
		public eMarca eMarca
		{
			get
			{
				return this._eMarca.Entity;
			}
			set
			{
				eMarca previousValue = this._eMarca.Entity;
				if (((previousValue != value) 
							|| (this._eMarca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eMarca.Entity = null;
						previousValue.eAlmacenamientos.Remove(this);
					}
					this._eMarca.Entity = value;
					if ((value != null))
					{
						value.eAlmacenamientos.Add(this);
						this._idMarca = value.id;
					}
					else
					{
						this._idMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("eMarca");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eAlmacenamiento = this;
		}
		
		private void detach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eAlmacenamiento = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Graficos")]
	public partial class eGraficos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _modelo;
		
		private EntitySet<eProcesador> _eProcesadors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmodeloChanging(string value);
    partial void OnmodeloChanged();
    #endregion
		
		public eGraficos()
		{
			this._eProcesadors = new EntitySet<eProcesador>(new Action<eProcesador>(this.attach_eProcesadors), new Action<eProcesador>(this.detach_eProcesadors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelo", DbType="VarChar(20)")]
		public string modelo
		{
			get
			{
				return this._modelo;
			}
			set
			{
				if ((this._modelo != value))
				{
					this.OnmodeloChanging(value);
					this.SendPropertyChanging();
					this._modelo = value;
					this.SendPropertyChanged("modelo");
					this.OnmodeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eGraficos_eProcesador", Storage="_eProcesadors", ThisKey="id", OtherKey="idGraficos")]
		public EntitySet<eProcesador> eProcesadors
		{
			get
			{
				return this._eProcesadors;
			}
			set
			{
				this._eProcesadors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_eProcesadors(eProcesador entity)
		{
			this.SendPropertyChanging();
			entity.eGraficos = this;
		}
		
		private void detach_eProcesadors(eProcesador entity)
		{
			this.SendPropertyChanging();
			entity.eGraficos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Marca")]
	public partial class eMarca : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _nombre;
		
		private EntitySet<eAlmacenamiento> _eAlmacenamientos;
		
		private EntitySet<eProcesador> _eProcesadors;
		
		private EntitySet<eNotebook> _eNotebooks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnombreChanging(string value);
    partial void OnnombreChanged();
    #endregion
		
		public eMarca()
		{
			this._eAlmacenamientos = new EntitySet<eAlmacenamiento>(new Action<eAlmacenamiento>(this.attach_eAlmacenamientos), new Action<eAlmacenamiento>(this.detach_eAlmacenamientos));
			this._eProcesadors = new EntitySet<eProcesador>(new Action<eProcesador>(this.attach_eProcesadors), new Action<eProcesador>(this.detach_eProcesadors));
			this._eNotebooks = new EntitySet<eNotebook>(new Action<eNotebook>(this.attach_eNotebooks), new Action<eNotebook>(this.detach_eNotebooks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nombre", DbType="VarChar(15)")]
		public string nombre
		{
			get
			{
				return this._nombre;
			}
			set
			{
				if ((this._nombre != value))
				{
					this.OnnombreChanging(value);
					this.SendPropertyChanging();
					this._nombre = value;
					this.SendPropertyChanged("nombre");
					this.OnnombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_eAlmacenamiento", Storage="_eAlmacenamientos", ThisKey="id", OtherKey="idMarca")]
		public EntitySet<eAlmacenamiento> eAlmacenamientos
		{
			get
			{
				return this._eAlmacenamientos;
			}
			set
			{
				this._eAlmacenamientos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_eProcesador", Storage="_eProcesadors", ThisKey="id", OtherKey="idMarca")]
		public EntitySet<eProcesador> eProcesadors
		{
			get
			{
				return this._eProcesadors;
			}
			set
			{
				this._eProcesadors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_Notebook", Storage="_eNotebooks", ThisKey="id", OtherKey="idMarca")]
		public EntitySet<eNotebook> eNotebooks
		{
			get
			{
				return this._eNotebooks;
			}
			set
			{
				this._eNotebooks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_eAlmacenamientos(eAlmacenamiento entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = this;
		}
		
		private void detach_eAlmacenamientos(eAlmacenamiento entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = null;
		}
		
		private void attach_eProcesadors(eProcesador entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = this;
		}
		
		private void detach_eProcesadors(eProcesador entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = null;
		}
		
		private void attach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = this;
		}
		
		private void detach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eMarca = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Procesador")]
	public partial class eProcesador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _modelo;
		
		private System.Nullable<double> _frecuencia;
		
		private System.Nullable<int> _nroNucleos;
		
		private System.Nullable<int> _idGraficos;
		
		private System.Nullable<int> _idMarca;
		
		private EntitySet<eNotebook> _eNotebooks;
		
		private EntityRef<eGraficos> _eGraficos;
		
		private EntityRef<eMarca> _eMarca;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmodeloChanging(string value);
    partial void OnmodeloChanged();
    partial void OnfrecuenciaChanging(System.Nullable<double> value);
    partial void OnfrecuenciaChanged();
    partial void OnnroNucleosChanging(System.Nullable<int> value);
    partial void OnnroNucleosChanged();
    partial void OnidGraficosChanging(System.Nullable<int> value);
    partial void OnidGraficosChanged();
    partial void OnidMarcaChanging(System.Nullable<int> value);
    partial void OnidMarcaChanged();
    #endregion
		
		public eProcesador()
		{
			this._eNotebooks = new EntitySet<eNotebook>(new Action<eNotebook>(this.attach_eNotebooks), new Action<eNotebook>(this.detach_eNotebooks));
			this._eGraficos = default(EntityRef<eGraficos>);
			this._eMarca = default(EntityRef<eMarca>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelo", DbType="VarChar(25)")]
		public string modelo
		{
			get
			{
				return this._modelo;
			}
			set
			{
				if ((this._modelo != value))
				{
					this.OnmodeloChanging(value);
					this.SendPropertyChanging();
					this._modelo = value;
					this.SendPropertyChanged("modelo");
					this.OnmodeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_frecuencia", DbType="Float")]
		public System.Nullable<double> frecuencia
		{
			get
			{
				return this._frecuencia;
			}
			set
			{
				if ((this._frecuencia != value))
				{
					this.OnfrecuenciaChanging(value);
					this.SendPropertyChanging();
					this._frecuencia = value;
					this.SendPropertyChanged("frecuencia");
					this.OnfrecuenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nroNucleos", DbType="Int")]
		public System.Nullable<int> nroNucleos
		{
			get
			{
				return this._nroNucleos;
			}
			set
			{
				if ((this._nroNucleos != value))
				{
					this.OnnroNucleosChanging(value);
					this.SendPropertyChanging();
					this._nroNucleos = value;
					this.SendPropertyChanged("nroNucleos");
					this.OnnroNucleosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idGraficos", DbType="Int")]
		public System.Nullable<int> idGraficos
		{
			get
			{
				return this._idGraficos;
			}
			set
			{
				if ((this._idGraficos != value))
				{
					if (this._eGraficos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidGraficosChanging(value);
					this.SendPropertyChanging();
					this._idGraficos = value;
					this.SendPropertyChanged("idGraficos");
					this.OnidGraficosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", DbType="Int")]
		public System.Nullable<int> idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					if (this._eMarca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eProcesador_Notebook", Storage="_eNotebooks", ThisKey="id", OtherKey="idProcesador")]
		public EntitySet<eNotebook> eNotebooks
		{
			get
			{
				return this._eNotebooks;
			}
			set
			{
				this._eNotebooks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eGraficos_eProcesador", Storage="_eGraficos", ThisKey="idGraficos", OtherKey="id", IsForeignKey=true)]
		public eGraficos eGraficos
		{
			get
			{
				return this._eGraficos.Entity;
			}
			set
			{
				eGraficos previousValue = this._eGraficos.Entity;
				if (((previousValue != value) 
							|| (this._eGraficos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eGraficos.Entity = null;
						previousValue.eProcesadors.Remove(this);
					}
					this._eGraficos.Entity = value;
					if ((value != null))
					{
						value.eProcesadors.Add(this);
						this._idGraficos = value.id;
					}
					else
					{
						this._idGraficos = default(Nullable<int>);
					}
					this.SendPropertyChanged("eGraficos");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_eProcesador", Storage="_eMarca", ThisKey="idMarca", OtherKey="id", IsForeignKey=true)]
		public eMarca eMarca
		{
			get
			{
				return this._eMarca.Entity;
			}
			set
			{
				eMarca previousValue = this._eMarca.Entity;
				if (((previousValue != value) 
							|| (this._eMarca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eMarca.Entity = null;
						previousValue.eProcesadors.Remove(this);
					}
					this._eMarca.Entity = value;
					if ((value != null))
					{
						value.eProcesadors.Add(this);
						this._idMarca = value.id;
					}
					else
					{
						this._idMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("eMarca");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eProcesador = this;
		}
		
		private void detach_eNotebooks(eNotebook entity)
		{
			this.SendPropertyChanging();
			entity.eProcesador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Notebook")]
	public partial class eNotebook : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _modelo;
		
		private System.Nullable<double> _tamañoPantalla;
		
		private System.Nullable<int> _memoria;
		
		private System.Nullable<double> _peso;
		
		private System.Nullable<int> _idProcesador;
		
		private System.Nullable<int> _idAlmacenamiento;
		
		private System.Nullable<int> _idMarca;
		
		private EntityRef<eAlmacenamiento> _eAlmacenamiento;
		
		private EntityRef<eMarca> _eMarca;
		
		private EntityRef<eProcesador> _eProcesador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmodeloChanging(string value);
    partial void OnmodeloChanged();
    partial void OntamañoPantallaChanging(System.Nullable<double> value);
    partial void OntamañoPantallaChanged();
    partial void OnmemoriaChanging(System.Nullable<int> value);
    partial void OnmemoriaChanged();
    partial void OnpesoChanging(System.Nullable<double> value);
    partial void OnpesoChanged();
    partial void OnidProcesadorChanging(System.Nullable<int> value);
    partial void OnidProcesadorChanged();
    partial void OnidAlmacenamientoChanging(System.Nullable<int> value);
    partial void OnidAlmacenamientoChanged();
    partial void OnidMarcaChanging(System.Nullable<int> value);
    partial void OnidMarcaChanged();
    #endregion
		
		public eNotebook()
		{
			this._eAlmacenamiento = default(EntityRef<eAlmacenamiento>);
			this._eMarca = default(EntityRef<eMarca>);
			this._eProcesador = default(EntityRef<eProcesador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelo", DbType="VarChar(20)")]
		public string modelo
		{
			get
			{
				return this._modelo;
			}
			set
			{
				if ((this._modelo != value))
				{
					this.OnmodeloChanging(value);
					this.SendPropertyChanging();
					this._modelo = value;
					this.SendPropertyChanged("modelo");
					this.OnmodeloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tamañoPantalla", DbType="Float")]
		public System.Nullable<double> tamañoPantalla
		{
			get
			{
				return this._tamañoPantalla;
			}
			set
			{
				if ((this._tamañoPantalla != value))
				{
					this.OntamañoPantallaChanging(value);
					this.SendPropertyChanging();
					this._tamañoPantalla = value;
					this.SendPropertyChanged("tamañoPantalla");
					this.OntamañoPantallaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memoria", DbType="Int")]
		public System.Nullable<int> memoria
		{
			get
			{
				return this._memoria;
			}
			set
			{
				if ((this._memoria != value))
				{
					this.OnmemoriaChanging(value);
					this.SendPropertyChanging();
					this._memoria = value;
					this.SendPropertyChanged("memoria");
					this.OnmemoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peso", DbType="Float")]
		public System.Nullable<double> peso
		{
			get
			{
				return this._peso;
			}
			set
			{
				if ((this._peso != value))
				{
					this.OnpesoChanging(value);
					this.SendPropertyChanging();
					this._peso = value;
					this.SendPropertyChanged("peso");
					this.OnpesoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idProcesador", DbType="Int")]
		public System.Nullable<int> idProcesador
		{
			get
			{
				return this._idProcesador;
			}
			set
			{
				if ((this._idProcesador != value))
				{
					if (this._eProcesador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidProcesadorChanging(value);
					this.SendPropertyChanging();
					this._idProcesador = value;
					this.SendPropertyChanged("idProcesador");
					this.OnidProcesadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idAlmacenamiento", DbType="Int")]
		public System.Nullable<int> idAlmacenamiento
		{
			get
			{
				return this._idAlmacenamiento;
			}
			set
			{
				if ((this._idAlmacenamiento != value))
				{
					if (this._eAlmacenamiento.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidAlmacenamientoChanging(value);
					this.SendPropertyChanging();
					this._idAlmacenamiento = value;
					this.SendPropertyChanged("idAlmacenamiento");
					this.OnidAlmacenamientoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idMarca", DbType="Int")]
		public System.Nullable<int> idMarca
		{
			get
			{
				return this._idMarca;
			}
			set
			{
				if ((this._idMarca != value))
				{
					if (this._eMarca.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidMarcaChanging(value);
					this.SendPropertyChanging();
					this._idMarca = value;
					this.SendPropertyChanged("idMarca");
					this.OnidMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eAlmacenamiento_Notebook", Storage="_eAlmacenamiento", ThisKey="idAlmacenamiento", OtherKey="id", IsForeignKey=true)]
		public eAlmacenamiento eAlmacenamiento
		{
			get
			{
				return this._eAlmacenamiento.Entity;
			}
			set
			{
				eAlmacenamiento previousValue = this._eAlmacenamiento.Entity;
				if (((previousValue != value) 
							|| (this._eAlmacenamiento.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eAlmacenamiento.Entity = null;
						previousValue.eNotebooks.Remove(this);
					}
					this._eAlmacenamiento.Entity = value;
					if ((value != null))
					{
						value.eNotebooks.Add(this);
						this._idAlmacenamiento = value.id;
					}
					else
					{
						this._idAlmacenamiento = default(Nullable<int>);
					}
					this.SendPropertyChanged("eAlmacenamiento");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eMarca_Notebook", Storage="_eMarca", ThisKey="idMarca", OtherKey="id", IsForeignKey=true)]
		public eMarca eMarca
		{
			get
			{
				return this._eMarca.Entity;
			}
			set
			{
				eMarca previousValue = this._eMarca.Entity;
				if (((previousValue != value) 
							|| (this._eMarca.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eMarca.Entity = null;
						previousValue.eNotebooks.Remove(this);
					}
					this._eMarca.Entity = value;
					if ((value != null))
					{
						value.eNotebooks.Add(this);
						this._idMarca = value.id;
					}
					else
					{
						this._idMarca = default(Nullable<int>);
					}
					this.SendPropertyChanged("eMarca");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="eProcesador_Notebook", Storage="_eProcesador", ThisKey="idProcesador", OtherKey="id", IsForeignKey=true)]
		public eProcesador eProcesador
		{
			get
			{
				return this._eProcesador.Entity;
			}
			set
			{
				eProcesador previousValue = this._eProcesador.Entity;
				if (((previousValue != value) 
							|| (this._eProcesador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._eProcesador.Entity = null;
						previousValue.eNotebooks.Remove(this);
					}
					this._eProcesador.Entity = value;
					if ((value != null))
					{
						value.eNotebooks.Add(this);
						this._idProcesador = value.id;
					}
					else
					{
						this._idProcesador = default(Nullable<int>);
					}
					this.SendPropertyChanged("eProcesador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
